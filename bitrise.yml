---
format_version: '13'
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
project_type: android
trigger_map:
- push_branch: '*'
  workflow: primary
- pull_request_source_branch: '*'
  workflow: primary
app:
  envs:
  - PROJECT_LOCATION: .
  - MODULE: app
  - VARIANT: ''
  - GRADLEW_PATH: ./gradlew
workflows:
  primary:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull@2: {}
    - android-lint@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: app
        - cache_level: all
        - variant: debug
    - android-unit-test@1:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: app
        - arguments: ''
        - cache_level: all
        - variant: debug
    - android-build-for-ui-testing@0:
        inputs:
        - variant: debug
        - module: app
    - virtual-device-testing-for-android@1:
        inputs:
        - test_type: instrumentation
        - directories_to_pull: /sdcard/
        - download_test_results: 'true'
        - environment_variables: |-
            coverage=true
            coverageFile=/sdcard/coverage.ec
        - test_devices: 'NexusLowRes,29,en,portrait'
    - deploy-to-bitrise-io@2:
        inputs:
        - notify_user_groups: none
    - cache-push@2: {}
  deploy:
    description: >
      ## How to get a signed APK


      This workflow contains the **Sign APK** step. To sign your APK all you
      have to do is to:


      1. Click on **Code Signing** tab

      1. Find the **ANDROID KEYSTORE FILE** section

      1. Click or drop your file on the upload file field

      1. Fill the displayed 3 input fields:
       1. **Keystore password**
       1. **Keystore alias**
       1. **Private key password**
      1. Click on **[Save metadata]** button


      That's it! From now on, **Sign APK** step will receive your uploaded
      files.


      ## To run this workflow


      If you want to run this workflow manually:


      1. Open the app's build list page

      2. Click on **[Start/Schedule a Build]** button

      3. Select **deploy** in **Workflow** dropdown input

      4. Click **[Start Build]** button


      Or if you need this workflow to be started by a GIT event:


      1. Click on **Triggers** tab

      2. Setup your desired event (push/tag/pull) and select **deploy** workflow

      3. Click on **[Done]** and then **[Save]** buttons


      The next change in your repository that matches any of your trigger map
      event will start **deploy** workflow.
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - cache-pull@2: {}
    - android-lint@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: release
    - android-unit-test@1:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - variant: release
    - android-build@0:
        inputs:
        - project_location: $PROJECT_LOCATION
        - module: $MODULE
        - build_type: aab
        - variant: release
    - sign-apk@1:
        run_if: '{{getenv "BITRISEIO_ANDROID_KEYSTORE_URL" | ne ""}}'
        inputs:
        - use_apk_signer: 'true'
    - deploy-to-bitrise-io@2: {}
    - cache-push@2: {}
